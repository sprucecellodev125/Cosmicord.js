{"meta":{"version":"0.4.0","format":20,"date":1686238696576},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"<p align=\"center\">\n    <img src=\"https://media.discordapp.net/attachments/1113373125086814320/1116284868897296384/CosmicordBanner.png\"/>\n</p>\n\n# About\n\nCosmicord.js is a powerful and intuitive Lavalink wrapper designed to simplify the process of integrating Lavalink into your Node.js applications.\n\n![Cosmicord.js](https://discord.com/api/guilds/1116001022167490642/widget.png?style=banner2)\n\n# Documentation\n\nYou can find the documentation [here](https://cosmicordjs.now.sh).\n\n# Installation\n\n```sh\nnpm install cosmicord.js\n```\n\nor if you use yarn\n\n```sh\nyarn add cosmicord.js\n```\n\n# Help\n\nIf you don't understand something in the documentation, you are experiencing problems, or you just need a gentle nudge in the right direction, please join our [Discord server](https://discord.gg/pSKW5cWNtS).\n","path":"README.md"},"get-started":{"name":"Get Started","type":"md","content":"# Get Started\n\nDownload the latest Lavalink binary from their [GitHub](https://github.com/lavalink-devs/Lavalink/releases) and run it. You can find more information about Lavalink [here](https://github.com/lavalink-devs/Lavalink)\n\n# Example\n\nCreate the discord client and Cosmicord client\n\n```ts\n// Import the required classes\nimport { Cosmicord } from \"cosmicord.js\";\nimport { Client } from \"discord.js\";\n\n// Create the discord client\nconst client = new Client({\n  intents: [\"Guilds\", \"GuildVoiceStates\"],\n});\n\n// Create the Cosmicord client\nconst cosmicord = new Cosmicord({\n  nodes: [\n    {\n      host: \"localhost\",\n      port: 2333,\n      password: \"youshallnotpass\",\n      identifier: \"Main-Node\",\n    },\n  ],\n  send: (id, payload) => {\n    const guild = client.guilds.cache.get(id);\n    if (guild) guild.shard.send(payload);\n  },\n});\n```\n\nInitialize the Cosmicord client when the discord client is ready\n\n```ts\n// ...\nclient.on(\"ready\", () => {\n  // Log to the console that the client is ready\n  console.log(\"Client is ready!\");\n\n  // Initialize the Cosmicord client\n  cosmicord.init(client.user.id);\n});\n```\n\nSend the voice server update and voice state update to Cosmicord\n\n```ts\n// ...\nclient.on(\"raw\", (packet) => {\n  cosmicord.updateVoiceState(packet);\n});\n```\n\nHow to play a track\n\n```ts\nimport { RestLoadResultType } from \"cosmicord.js\";\n\n// Search for a track\nconst res = await cosmicord.search(\n  {\n    query: \"Never Gonna Give You Up\",\n  },\n  \"requester id\"\n);\n\n// Check if the search was successful\nif (res.loadType === RestLoadResultType.LoadFailed) {\n  return console.log(\"Failed to load track\");\n} else if (res.loadType === RestLoadResultType.NoMatches) {\n  return console.log(\"No matches found\");\n} else if (res.loadType === RestLoadResultType.PlaylistLoaded) {\n  return console.log(\"Playlist loaded\");\n}\n\n// Create the player\nconst player = cosmicord.createPlayer({\n  guildId: \"guild id\",\n  voiceChannelId: \"voice channel id\",\n  textChannelId: \"text channel id\",\n  selfDeaf: true,\n});\n\n// Add the track to the queue\nplayer.queue.add(res.tracks[0]);\n\n// Play the track\nawait player.play();\n```\n","path":"docs/general/Get Started.md"}}}},"classes":[],"typedefs":[]}